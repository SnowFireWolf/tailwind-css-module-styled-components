var T=Object.defineProperty,b=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var g=(e,t,n)=>t in e?T(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&g(e,n,t[n]);if(o)for(var n of o(t))p.call(t,n)&&g(e,n,t[n]);return e},m=(e,t)=>b(e,h(t));var C=(e,t)=>{var n={};for(var s in e)u.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&o)for(var s of o(e))t.indexOf(s)<0&&p.call(e,s)&&(n[s]=e[s]);return n};import w,{useContext as j}from"react";import F from"./elementTags";import{TailwindStyledMapContext as I}from"./Provider";import{twMerge as v}from"tailwind-merge";export const cleanTemplate=e=>e.join(" ").trim().replace(/\n/g," ").replace(/\s{2,}/g," ").split(" ").filter(n=>n!==",");const l=(e,t)=>{let n=[],s=[];return typeof e=="object"?s=e:typeof e=="string"&&(s=e.split(" ")),s.forEach(r=>{t[r]!==void 0&&n.push(t[r])}),n},M=(e,t)=>w.forwardRef((O,x)=>{var d=O,{as:s}=d,r=C(d,["as"]);const{tailwind:i}=j(I),S=s||e;if(i){let a=[];t!==void 0&&(typeof t=="string"?a=l(cleanTemplate([t]),i):a=l(t,i));let c=[];typeof r.sx=="string"?c=l(cleanTemplate([r.sx]),i):c=l(r.sx,i);const A=a.concat(c),E=Object.fromEntries(Object.entries(r).filter(([y])=>!y.includes("sx")&&!y.includes("as")));return w.createElement(S,f({className:v(...A,r.className),ref:x},E))}else throw console.error("You need to import TailwindCssModuleContext to use styled-map."),console.error("More info vist: https://github.com/SnowFireWolf/tailwind-styled-map"),"TailwindCssModuleProvider is not found"}),K=F.reduce((e,t)=>m(f({},e),{[t]:n=>M(t,n)}),{}),N=Object.assign(M,K);export default N;
