var b=Object.defineProperty,h=Object.defineProperties;var E=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var u=(s,e,t)=>e in s?b(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,y=(s,e)=>{for(var t in e||(e={}))p.call(e,t)&&u(s,t,e[t]);if(o)for(var t of o(e))m.call(e,t)&&u(s,t,e[t]);return s},C=(s,e)=>h(s,E(e));var w=(s,e)=>{var t={};for(var n in s)p.call(s,n)&&e.indexOf(n)<0&&(t[n]=s[n]);if(s!=null&&o)for(var n of o(s))e.indexOf(n)<0&&m.call(s,n)&&(t[n]=s[n]);return t};import x,{useContext as F}from"react";import N from"./elementTags";import{TailwindStyledMapContext as I}from"./Provider";export const cleanTemplate=s=>s.join(" ").trim().replace(/\n/g," ").replace(/\s{2,}/g," ").split(" ").filter(t=>t!==",");const a=(s,e)=>{let t=[],n=[];return typeof s=="object"?n=s:typeof s=="string"&&(n=s.split(" ")),n.forEach(r=>{e[r]!==void 0&&t.push(e[r])}),t},v=(...s)=>s.join(" ").trim(),S=(s,e)=>{const t=x.forwardRef((L,M)=>{var f=L,{as:n}=f,r=w(f,["as"]);const{tailwind:i}=F(I),A=n||s;if(i){let l=[];e!==void 0&&(typeof e=="string"?l=a(cleanTemplate([e]),i):l=a(e,i));let c=[];typeof r.sx=="string"?c=a(cleanTemplate([r.sx]),i):c=a(r.sx,i);const T=l.concat(c),j=Object.fromEntries(Object.entries(r).filter(([g])=>!g.includes("sx")&&!g.includes("as"))),d=v(...T);return x.createElement(A,y({className:d||null,ref:M},j))}else throw console.error("You need to import TailwindCssModuleContext to use styled-map."),console.error("More info vist: https://github.com/SnowFireWolf/tailwind-styled-map"),"TailwindCssModuleProvider is not found"});return typeof s!="string"?t.displayName=s.displayName||s.name||"tw.Component":t.displayName="tw."+s,t},K=N.reduce((s,e)=>C(y({},s),{[e]:t=>S(e,t)}),{}),O=Object.assign(S,K);export default O;
